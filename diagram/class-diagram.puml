@startuml

package mvc {
	class NoteTakingApp {
		+ main()
	} 
}

package mvc.cntl {
	class LoginCntl {
		- CreateAccoutView
		- LoginView
		- DBConnection
		+ showLoginUI(boolean bool)
		+ showCreateAccoutnUI(boolean bool)
		+ createAccount(String firstName, String lastName)
		+ authenticate(String firstName, String lastName)
	}
	class NavCntl {
		- LoginCntl
		- NavView
		- DBConnection
		+ showNavUI()
		+ giveLoginControl()
		+ giveNoteControl()
	}
	class NoteCntl {
		- DBConnection
		- NoteView
		- NavCntl
		+ sendNote(int userId, int noteID, String noteBody)
		+ showNoteUI(Boolean bool)
		+ giveNavControl()
	}
	class AlertCntl {
		- AlertView alert
	}
}

package mvc.model {
	class DBConnection {
		- Connection
		+ connect()
		+ insertUser(int userId, String firstName, String lastName)
		+ insertNote(int noteId, String noteBody)
		+ insertNoteUser(int userId, int noteId)
		+ removeUser(int userId)
		+ closeConnection()
		+ getCurrentPath()
		+ getLastUserId()
		+ checkAccountCredentials(String firstName, String lastname)
		+ insertDate(Date finalDateTime)
	}
}

package mvc.view {
	class CreateAccountView {
		- LoginCntl
	}
	class LoginView {
		- LoginCntl
	}
	class DateTimeView {
		- DateTimeCntl
	}
	class NavView {
		- NavCntl
	}
	class NoteView {
		- NoteCntl
	}
	class AlertView {
		- AlertCntl
	}
}

database "Sqlite" {
	!define primary_key(x) <b><color:#b8861b><&key></color> x</b>
	!define foreign_key(x) <color:#aaaaaa><&key></color> x
	!define column(x) <color:#efefef><&media-record></color> x
	!define table(x) entity x << (T, white) >>

	table( NOTE ) {
		primary_key( id ): UUID 
		column( username ): VARCHAR
		column( date ): DATETIME
		column( body ): TEXT
	}
}

skinparam linetype polyline 
skinparam linetype ortho

NoteTakingApp --> LoginCntl : uses
LoginCntl --> CreateAccountView : uses
LoginCntl --> LoginView : updates
LoginCntl --> DBConnection : uses 
LoginCntl --> NoteCntl : gives control
DBConnection --> Sqlite : uses
LoginCntl --> NavCntl : gives control

NavCntl --> NavView : updates
NavCntl --> DBConnection : uses
NavCntl --> NoteCntl : gives control
NavCntl --> AlertCntl : gives control
NavCntl --> LoginCntl : gives control

NoteCntl --> NoteView : updates
NoteCntl --> DBConnection : uses
NoteCntl --> NavCntl : gives control

AlertCntl --> AlertView : updates
AlertCntl --> DBConnection : uses
AlertCntl --> NavCntl : gives control

@enduml
